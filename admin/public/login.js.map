{"version":3,"sources":["login.js"],"names":["loginurl","login","Vue","el","data","input_username","input_password","username","password","message","created","methods","getData","fetch","method","headers","body","jsonStr","then","res","json","loggedin","catch","err","console","log","log_in","event","ob","JSON","stringify","localStorage","setItem","location","replace"],"mappings":"AAAA,a,CAEA;;AACA,IAAIA,QAAQ,GAAG,iDAAf,C,CAEA;;AACA,IAAIC,KAAK,GAAG,IAAIC,GAAJ,CAAQ;AAChBC,EAAAA,EAAE,EAAE,QADY;AAEhBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,cAAc,EAAE,EADd;AAEFC,IAAAA,cAAc,EAAE,EAFd;AAGFC,IAAAA,QAAQ,EAAE,EAHR;AAIFC,IAAAA,QAAQ,EAAE,EAJR;AAKFC,IAAAA,OAAO,EAAE;AALP,GAFU;;AAUhBC,EAAAA,OAAO,GAAG,CACN;AACH,GAZe;;AAahBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,YAAW;AAAE;AAClBC,MAAAA,KAAK,CAACb,QAAQ,GAAE,QAAX,EAAqB;AACtBc,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFa;AAKtBC,QAAAA,IAAI,EAAEC,OALgB,CAKR;;AALQ,OAArB,CAAL,CAOCC,IAPD,CAOOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPf,EAQCF,IARD,CAQOd,IAAD,IAAU;AAAE;AACd,YAAGA,IAAI,CAACK,OAAL,GAAe,UAAlB,EAA8B;AAC1B,eAAKY,QAAL,GAAgB,IAAhB;AACH,SAFD,MAEO,IAAIjB,IAAI,CAACK,OAAL,IAAgB,WAApB,EAAiC;AACpC,eAAKA,OAAL,GAAe,0CAAf,CADoC,CACuB;AAC9D;AACJ,OAdD,EAeCa,KAfD,CAeQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAfhB;AAgBH,KAlBI;AAmBLG,IAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB;AACpB,UAAIC,EAAE,GAAG,EAAT,CADoB,CAEpB;;AACAA,MAAAA,EAAE,CAACrB,QAAH,GAAc,KAAKF,cAAnB;AACAuB,MAAAA,EAAE,CAACpB,QAAH,GAAc,KAAKF,cAAnB;AAEA,UAAIW,OAAO,GAAGY,IAAI,CAACC,SAAL,CAAeF,EAAf,CAAd,CANoB,CAMc;;AAClCf,MAAAA,KAAK,CAACb,QAAQ,GAAE,QAAX,EAAqB;AACtBc,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFa;AAKtBC,QAAAA,IAAI,EAAEC,OALgB,CAKR;;AALQ,OAArB,CAAL,CAOCC,IAPD,CAOOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPf,EAQCF,IARD,CAQOd,IAAD,IAAU;AAAE;AACd,YAAGA,IAAI,CAACK,OAAL,IAAgB,UAAnB,EAA+B;AAC3BsB,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,KAAK3B,cAAtC;AACA4B,UAAAA,QAAQ,CAACC,OAAT,CAAiB,YAAjB;AACH,SAHD,MAGO,IAAI9B,IAAI,CAACK,OAAL,IAAgB,WAApB,EAAiC;AACpC,eAAKA,OAAL,GAAe,0CAAf,CADoC,CACuB;AAC9D;AACJ,OAfD,EAgBCa,KAhBD,CAgBQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBhB,EAPoB,CAwBpB;AACA;;AACA;;;;;;AAMH;AAnDI;AAbO,CAAR,CAAZ","sourcesContent":["\"use strict\";\r\n\r\n//URL till webbtjänst\r\nlet loginurl = \"https://sleepy-tundra-34734.herokuapp.com/login\";\r\n\r\n// Ny instans av Vue\r\nlet login = new Vue({\r\n    el: '#login',\r\n    data: {\r\n        input_username: \"\",\r\n        input_password: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        message: \"\"\r\n        \r\n    },\r\n    created() {\r\n        //this.getData();\r\n    },\r\n    methods: {\r\n        getData: function() { // Hämtar användarnamn och lösenord som finns lagrat i databasen\r\n            fetch(loginurl +\"/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: jsonStr // Skicka med JSON-strängen i fetch-anropet\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => { // Lagrar hämtade datan i variabler i Vue:s data\r\n                if(data.message = \"Inloggad\") {\r\n                    this.loggedin = true;\r\n                } else if (data.message == \"Fel_Login\") {\r\n                    this.message = \"Användarnamn eller lösenord är felaktigt\"; // Felmeddelande\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n        },\r\n        log_in: function(event) { \r\n            let ob = {};\r\n            // Lagra värden från inputfälten i ett objekt\r\n            ob.username = this.input_username;\r\n            ob.password = this.input_password;\r\n\r\n            let jsonStr = JSON.stringify(ob); // Konvertera objekt till JSON\r\n            fetch(loginurl +\"/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: jsonStr // Skicka med JSON-strängen i fetch-anropet\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => { // Lagrar hämtade datan i variabler i Vue:s data\r\n                if(data.message == \"Inloggad\") {\r\n                    localStorage.setItem(\"username\", this.input_username);\r\n                    location.replace(\"admin.html\");\r\n                } else if (data.message == \"Fel_Login\") {\r\n                    this.message = \"Användarnamn eller lösenord är felaktigt\"; // Felmeddelande\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n            // Kontrollerar användarnamn och lösen från inloggningsformuläret och \r\n            // loggar in användare om dessa stämmer överens med inloggningsuppgifterna hämtade från databasen\r\n            /* if (this.loggedin == true) {\r\n                localStorage.setItem(\"username\", this.input_username);\r\n                location.replace(\"admin.html\");\r\n            } else {\r\n                this.message = \"Användarnamn eller lösenord är felaktigt\"; // Felmeddelande\r\n            } */\r\n        }\r\n    }\r\n});"],"file":"login.js"}