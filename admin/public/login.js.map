{"version":3,"sources":["login.js"],"names":["loginurl","login","Vue","el","data","input_username","input_password","username","password","message","methods","getData","event","fetch","then","res","json","catch","err","console","log","log_in","localStorage","setItem","location","replace","upd","updValueArr","target","value","split","ingredients","instruction","ob","recipeName","time","parseInt","portions","image","jsonStr","JSON","stringify","id","method","headers","body"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\n//URL till webbtjänst\r\nlet loginurl = \"https://sleepy-tundra-34734.herokuapp.com/login\";\r\n\r\nlet login = new Vue({\r\n    el: '#login',\r\n    data: {\r\n        input_username: \"\",\r\n        input_password: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        message: \"\"\r\n        \r\n    },\r\n    methods: {\r\n        getData: function(event) {\r\n            fetch(loginurl+\"/get\")\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.username = data[0].username;\r\n                this.password = data[0].password;   \r\n            })\r\n            .catch((err) => console.log(err));\r\n        },\r\n        log_in: function(event) {\r\n            if (this.username == this.input_username && this.password == this.input_password) {\r\n                localStorage.setItem(\"username\", this.username);\r\n                location.replace(\"admin.html\");\r\n            } else {\r\n                this.message = \"Användarnamn eller lösenord är felaktigt\";\r\n            }\r\n            \r\n                /* console.log(\"input: \" + this.input_username);\r\n                console.log(\"data: \" + this.username);\r\n                console.log(\"local storage: \" + localStorage.getItem(\"username\")); */\r\n        },\r\n        upd: function(event) {\r\n            \r\n            let updValueArr = event.target.value.split(\", \");\r\n            let ingredients = updValueArr[1].replace(\"[\", \"\").replace(\"]\", \"\");\r\n            let instruction = updValueArr[2].replace(\"[\", \"\").replace(\"]\", \"\");\r\n            let ob = {};\r\n            ob.recipeName = updValueArr[0];\r\n            ob.ingredients = ingredients.split(\",\\n\");\r\n            ob.instruction = instruction.split(\"\\n\");\r\n            ob.time = parseInt(updValueArr[3]);\r\n            ob.portions = parseInt(updValueArr[4]);\r\n            ob.image = updValueArr[5];\r\n\r\n            let jsonStr = JSON.stringify(ob);\r\n\r\n            fetch(loginurl+\"/update/\" + event.target.id, { //Lägger till IDt till url:en\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: jsonStr\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => console.log(data))\r\n            .catch((err) => console.log(err))\r\n        }\r\n    }\r\n});"],"file":"login.js"}